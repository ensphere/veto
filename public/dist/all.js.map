{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["\n/**\n * Ensphere Container\n */\n$.fn.ensphere = new function() {\n\n    /**\n     * Veto\n     */\n    this.veto = new function() {\n\n        var modal;\n\n        var wysiwygSelectors = [];\n\n        var parseNotifications = function()\n        {\n            $('[type=\"ensphere/notification\"]').each(function(){\n                var options = JSON.parse( $(this).html() );\n                new PNotify( options );\n            });\n        };\n\n        var removePageLoader = function()\n        {\n            var loader = $('#loader');\n            if( loader.length ) {\n                loader.fadeOut( 200, function(){\n                    $(this).remove();\n                });\n            }\n        };\n\n        var openMenuWhenActiveUrlParentIsPresent = function()\n        {\n            $( '> a', $('#sidebar-menu .active-url-parent:eq(0)').parents('#sidebar-menu .has-children:eq(0)') ).trigger( 'click' );\n        };\n\n        var onDocumentReady = function()\n        {\n            parseNotifications();\n            //openMenuWhenActiveUrlParentIsPresent();\n        };\n\n        var onWindowLoad = function()\n        {\n            removePageLoader();\n        };\n\n        /**\n         *\n         * @param errors\n         * @param modal\n         */\n        var modalError = function( errors, modal )\n        {\n            var wrapper = $('<div class=\"alert alert-danger\" role=\"alert\"><div class=\"header\">There was some errors with your submission</div><ul class=\"list\"></ul></div>');\n            errors.forEach(function(error){\n                $('<li />').text(error).appendTo( $( 'ul', wrapper ) );\n            });\n            $('[data-for=\"error-wrapper\"]', modal).html('').append(wrapper);\n            modal.semanticUiModal('refresh');\n        };\n\n        /**\n         *\n         * @param obj\n         */\n        var attachWYSIWYG = function( obj )\n        {\n            if( obj.data( 'wysiwyg' ) ) return false;\n            $.Redactor.prototype.scriptbuttons = function()\n            {\n                return {\n                    init: function()\n                    {\n                        var cite = this.button.add('cite', 'Cite');\n\n                        this.button.addCallback(cite, this.scriptbuttons.formatCite);\n\n                        // Set icons\n                        this.button.setAwesome('cite','fa-quote-right');\n\n                        /**\n                         * Add a dropdown list containing elements that can be applied to the selected text:\n                         */\n                        var dropdown = {\n                            'Button': {\n                                'title': 'Button',\n                                'func': function() {\n                                    // this.selection.format('a.c-btn.c-btn--primary');\n                                    console.log(this.selection.getNodes());\n                                    $.each(this.selection.getNodes(), function(key, item) {\n                                        $(item).replaceWith($('<button>' + this.innerHTML + '</button>'));\n                                    });\n                                    this.code.sync();\n                                }\n                            }\n                        };\n\n                        var button = this.button.add('styles', 'Other Elements');\n                        this.button.addDropdown(button, dropdown);\n                        this.button.setAwesome('styles', 'fa-cogs');\n                    },\n                    formatCite: function()\n                    {\n                        this.inline.format('cite');\n                    }\n                };\n            };\n            obj.data( 'wysiwyg', true );\n            obj.redactor({\n                minHeight : 300,\n                toolbarFixed : true,\n                cleanStyleOnEnter : true,\n                deniedTags : ['html', 'head', 'link', 'body', 'meta', 'script', 'style', 'applet' ],\n                plugins : [ 'mediaManager', 'scriptbuttons' ]\n            });\n        };\n\n        var checkForNewWysiwygInstances = function()\n        {\n            setTimeout( function(){\n                wysiwygSelectors.forEach( function(selector) {\n                    $( selector + ':visible' ).each( function(){\n                        if( ! $(this).data( 'wysiwyg' ) ) {\n                            attachWYSIWYG( $(this) );\n                        }\n                    });\n                });\n            }, 200 );\n\n        };\n\n        $(document).bind( 'click.veto', checkForNewWysiwygInstances );\n\n        $( \".js-delete\" ).bind( \"click\", function(e) {\n            var button = $(this);\n            e.preventDefault();\n            swal({\n                title: \"Are you sure?\",\n                text: \"This action cannot be reversed\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonClass: 'btn-danger',\n                confirmButtonText: 'Yes, delete it!',\n                cancelButtonText: \"No, cancel please!\",\n                closeOnConfirm: false,\n                closeOnCancel: false\n            }, function( isConfirm ) {\n                if ( isConfirm ) {\n                    window.location = button.attr('href');\n                } else {\n                    swal.close();\n                }\n            });\n        });\n\n        /**\n         * Refreshes the modal\n         */\n        this.refreshModal = function()\n        {\n            modal.semanticUiModal( 'refresh' );\n        };\n\n        /**\n         *\n         * @param text\n         * @returns {string}\n         */\n        this.slugify = function( text )\n        {\n            return text.toString().toLowerCase()\n                .replace( /\\s+/g, '-' )           // Replace spaces with -\n                .replace( /[^\\w\\-]+/g, '' )       // Remove all non-word chars\n                .replace( /\\-\\-+/g, '-' )         // Replace multiple - with single -\n                .replace( /^-+/, '' )             // Trim - from start of text\n                .replace( /-+$/, '' );            // Trim - from end of text\n        };\n\n\n        /**\n         *\n         * @param selector\n         * @param context\n         */\n        this.wysiwyg = function( selector, context )\n        {\n            wysiwygSelectors.push( selector );\n            context = context || $(document);\n            attachWYSIWYG( $( selector, context ) );\n        };\n\n        /**\n         *\n         * @param selector\n         * @param el\n         * @returns {*}\n         */\n        this.select = function( selector, el ) {\n            if ( ! el ) { el = document; }\n            return Array.prototype.slice.call( el.querySelectorAll( selector ) );\n        };\n\n        /**\n         *\n         * @param node\n         * @param _callbacks\n         */\n        this.singleSelect = function( selector, el ) {\n            if ( ! el ) { el = document; }\n            return el.querySelector( selector );\n        };\n\n        /**\n         *\n         * @param elm\n         * @param callback\n         */\n        this.clickEvent = function( elm, callback )\n        {\n            elm.removeEventListener( \"click\", callback );\n            elm.addEventListener( \"click\", callback );\n        };\n\n        /**\n         *\n         * @param node\n         * @param _callbacks\n         */\n        this.keyUpEvent = function( elm, callback )\n        {\n            if( elm ) {\n                elm.removeEventListener( \"keyup\", callback );\n                elm.addEventListener( \"keyup\", callback );\n            }\n        };\n\n        /**\n         *\n         * @param node\n         * @param _callbacks\n         */\n        this.focusEvent = function( elm, callback )\n        {\n            if( elm ) {\n                elm.removeEventListener( \"focus\", callback );\n                elm.addEventListener( \"focus\", callback );\n            }\n        };\n\n        /**\n         *\n         * @param node\n         * @param _callbacks\n         */\n        this.modalEdit = function( node, _callbacks )\n        {\n            var form = $(node).parents( 'form:eq(0)' );\n            _callbacks = _callbacks || {};\n            var callbacks = $.extend({\n                onVisible   : function(){},\n                onComplete  : function(){},\n                onError     : function(){},\n                onSave      : function(){},\n                onResponse  : function(){},\n                closeModal  : true\n            }, _callbacks);\n            var attributes = $.fn.ensphere.veto.getAttributes( node );\n            $(node).blur();\n            $.get( attributes.href, function( response ) {\n                callbacks.onResponse( response, attributes );\n                if( typeof $( response )[0].ownerDocument !== 'undefined' ) {\n                    $.fn.ensphere.veto.modalResponse( response, attributes, callbacks );\n                }\n            });\n        };\n\n        /**\n         *\n         * @param node\n         * @returns {{}}\n         */\n        this.getAttributes = function( node )\n        {\n            var attributes = {};\n            for( var i in node.attributes ) {\n                if( node.attributes.hasOwnProperty( i ) ) {\n                    attributes[node.attributes[i].name] = node.attributes[i].nodeValue;\n                }\n            }\n            return attributes;\n        };\n\n        /**\n         *\n         * @param response\n         * @param attributes\n         * @param callbacks\n         */\n        this.modalResponse = function( response, attributes, callbacks ){\n            if( typeof modal !== 'undefined' ) {\n                modal.semanticUiModal('close');\n            }\n            modal = $(response);\n            modal.semanticUiModal({\n                observeChanges : false,\n                onVisible : function() {\n                    var modalObj = $(this);\n                    var buttons = $('.ui.button, .btn.btn-success', modalObj);\n                    var _token = $('[name=\"_token\"]', modalObj).val();\n                    var form = $('form', modalObj);\n\n                    buttons.each(function(){\n                        $(this).click( function(e){\n                            var button = $(this);\n                            e.preventDefault();\n                            if( form.length && button[0].tagName.toLowerCase() === 'button' ) {\n                                var action = form.attr('action');\n                            } else {\n                                var action = $(this).attr('href');\n                            }\n                            callbacks.onSave( $(this), modalObj );\n                            var ajaxOptions = {\n                                type: 'GET',\n                                async: false,\n                                url: action,\n                                data : $('input, select, textarea', form).not('[name=\"_token\"]').serialize(),\n                                success: function( response ){\n                                    if( $(response)[0].id ) {\n                                        callbacks.onComplete( response, attributes, modal );\n                                    } else {\n                                        $.fn.ensphere.veto.modalResponse( response, attributes, callbacks );\n                                    }\n                                },\n                                error: function ( xhr, textstatus ) {\n                                    switch( xhr.status ) {\n                                        case 422 :\n                                            var errors = [];\n                                            /** Validation error */\n                                            var response = JSON.parse( xhr.responseText );\n                                            for( var i in response ) {\n                                                errors.push( response[i][0] );\n                                            }\n                                            modalError( errors, modal );\n                                            break;\n                                        case 403 :\n                                            modalError( [\"Request middleware denied this action\"], modal );\n                                            break;\n                                        default :\n                                            modalError( ['Unknown error has occurred: [\"' + xhr.status + '\",\"' + textstatus + '\"]'], modal );\n                                            break;\n                                    }\n                                    callbacks.onError( modalObj, xhr );\n                                }\n                            };\n                            if( form.length ) {\n                                ajaxOptions.headers = { 'X-CSRF-TOKEN' : _token };\n                                ajaxOptions.type = 'POST';\n                            }\n                            $.ajax(ajaxOptions);\n                        });\n                    });\n                    callbacks.onVisible( modalObj );\n                }\n            }).semanticUiModal('show');\n        };\n\n        $(document).ready(onDocumentReady);\n        $(window).load(onWindowLoad);\n\n    };\n};\n"]}